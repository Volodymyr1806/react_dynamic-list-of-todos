{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","query","selectValue","buttonSelected","handleSearchInput","event","value","target","setState","handleSelect","currentTarget","selectButton","filterTodosBySearch","filterTodosBySelect","filter","todo","titleLower","title","toLowerCase","queryLower","includes","props","todos","completed","this","selectUser","selectedId","changeTodoStatus","filteredTodos","className","type","placeholder","onChange","map","classNames","htmlFor","id","checked","userId","onClick","React","PureComponent","getUser","fetch","then","response","json","CurrentUser","selectedUser","clearInfo","a","user","prevProps","loadUser","name","email","phone","App","selectedUserId","selectUserId","todoId","newTodos","todosFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ba6e415.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  todos: Todo[]\n  selectUser: (userId: number) => void,\n  changeTodoStatus: (todoId: number) => void,\n  selectedId: number,\n};\n\ntype State = {\n  query: string,\n  selectValue: string,\n  buttonSelected: boolean,\n};\n\nexport class TodoList extends React.PureComponent<Props, State> {\n  state: State = {\n    query: '',\n    selectValue: '',\n    buttonSelected: false,\n  };\n\n  handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState(() => ({\n      query: value,\n    }));\n  };\n\n  handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.currentTarget;\n\n    this.setState(() => ({\n      selectValue: value,\n    }));\n  };\n\n  selectButton = () => {\n    this.setState(state => ({\n      buttonSelected: !state.buttonSelected,\n    }));\n  };\n\n  filterTodosBySearch = () => {\n    return this.filterTodosBySelect()\n      .filter(todo => {\n        const titleLower = todo.title.toLowerCase();\n        const queryLower = this.state.query.toLowerCase();\n\n        return titleLower.includes(queryLower);\n      });\n  };\n\n  filterTodosBySelect = () => {\n    switch (this.state.selectValue) {\n      case 'All todos':\n        return this.props.todos;\n      case 'Active todos':\n        return this.props.todos.filter(todo => todo.completed === false);\n      case 'Completed todos':\n        return this.props.todos.filter(todo => todo.completed === true);\n      default:\n        return this.props.todos;\n    }\n  };\n\n  render() {\n    const { selectUser, selectedId, changeTodoStatus } = this.props;\n    const {\n      query,\n      selectValue,\n    } = this.state;\n\n    const filteredTodos = this.filterTodosBySearch();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={query}\n          onChange={this.handleSearchInput}\n        />\n\n        <select value={selectValue} onChange={this.handleSelect}>\n          <option value=\"All todos\">All todos</option>\n          <option value=\"Active todos\">Active todos</option>\n          <option value=\"Completed todos\">Completed todos</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label htmlFor={`Todo-${todo.id}`}>\n                  <input\n                    type=\"checkbox\"\n                    id={`Todo-${todo.id}`}\n                    checked={todo.completed}\n                    onChange={() => {\n                      changeTodoStatus(todo.id);\n                    }}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames('TodoList__user-button button', {\n                    'TodoList__user-button--selected': selectedId === todo.userId,\n                  })}\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                    this.selectButton();\n                  }}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Todo, User } from './react-app-env';\n\nexport const getTodos: () => Promise<Todo[]> = () => {\n  return fetch('https://mate.academy/students-api/todos')\n    .then(response => response.json());\n};\n\nexport const getUser: (userId: number) => Promise<User> = (userId) => {\n  return fetch(`https://mate.academy/students-api/users/${userId}`)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { User } from '../../react-app-env';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedId: number,\n  selectUser: (userId: number) => void,\n};\n\ntype State = {\n  selectedUser: User | null,\n};\n\nexport class CurrentUser extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedUser: null,\n  };\n\n  async componentDidMount() {\n    const user = await getUser(this.props.selectedId);\n\n    this.setState({\n      selectedUser: user,\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedId !== this.props.selectedId) {\n      this.loadUser();\n    }\n  }\n\n  clearInfo = () => {\n    this.setState(() => ({\n      selectedUser: null,\n    }));\n\n    this.props.selectUser(0);\n  };\n\n  async loadUser() {\n    const user = await getUser(this.props.selectedId);\n\n    this.setState({ selectedUser: user });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        {selectedUser && (\n          <>\n            <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${selectedUser.id}`}</span></h2>\n\n            <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n            <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n            <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.clearInfo}\n            >\n              Clear\n            </button>\n          </>\n        )}\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { Todo } from './react-app-env.d';\nimport { getTodos } from './api';\n\ntype State = {\n  selectedUserId: number,\n  todos: Todo[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n\n    this.setState({\n      todos: todosFromServer,\n    });\n  }\n\n  selectUserId = (userId: number) => {\n    this.setState(state => ({\n      ...state,\n      selectedUserId: userId,\n    }));\n  };\n\n  changeTodoStatus = (todoId: number) => {\n    const newTodos = this.state.todos.map(todo => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    });\n\n    this.setState(() => ({\n      todos: newTodos,\n    }));\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUserId}\n            selectedId={selectedUserId}\n            changeTodoStatus={this.changeTodoStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser selectedId={selectedUserId} selectUser={this.selectUserId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}